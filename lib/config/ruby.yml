---
include_paths:
  - '#!:ruby'
  - '*.gemspec'
  - .irbrc
  - irb.rc
  - _irbrc
  - $irbrc
  - Gemfile
  - '*.erb'
  - '*.rb'

yaml_paths:
  - '*.yml'
  - '*.yaml'

json_paths:
  - '*.json'

test_paths:
  - /tests/
  - /test/

erb_paths:
  - '*.erb'

haml_paths:
  - '*.haml'

slim_paths:
  - '*.slim'

keep:
  - initialize # called by new
  - inspect # called by repl, to_s
  - respond_to_missing? # called by respond_to?
  - method_missing # called by method dispatch
  - coerce # called by Numeric
  - to_s # called by "#{}"
  - to_ary # called by Array(), []+
  - to_a # called by Array(), *splat
  - to_str # called by String(), ""+
  - to_hash # called by Hash(), **splat, {}.merge
  - to_int # called by Integer()
  - to_i # called by Integer()
  - to_f # called by Float()
  - <=> # called by Comparable
  - each # called by Enumerable
  - marshal_dump # called by Marshal.dump
  - marshal_load # called by Marshal.load
  - _dump # called by Marshal.dump
  - _load # called by Marshal.load
  - inherited # called by Subclass < Klass or Class.new(Klass)
  - extended # called by extend Module
  - included # called by include Module
  - $VERBOSE # called by whatever is outputting warnings i guess
  - === # called by when
  - == # called by Array value, Hash value equality, ===
  - hash # called by Hash key equality
  - eql? # called by Hash key equality
dynamic:
  - name:
      - send
      - public_send
      - __send__
      - method
      - respond_to?
      - instance_method
    calls: 0
  - name: attr_reader
    defines:
      argument: '*'
    calls:
      argument: '*'
      add_prefix: '@'
  - name: attr_writer
    defines:
      argument: '*'
      add_suffix: '='
  - name: attr_accessor
    defines:
      - argument: '*'
        add_suffix: '='
      - argument: '*'
    calls:
      argument: '*'
      add_prefix: '@'
  - name: define_method
    defines: 0
  - name: alias_method
    defines: 0
    calls: 1
  - name:
      - instance_variable_get
      - class_variable_get
    calls: 0
  - name:
      - instance_variable_set
      - class_variable_set
    defines: 0

  # Module
  - name: public
    unless:
      has_argument: 0
    set_default_privacy: public

  - name:
      - public
      - public_class_method
      - public_constant
    has_argument: 0
    set_privacy:
      argument: '*'
      to: public

  - name:
      - public
      - public_class_method
    has_argument: 0
    unless:
      has_argument: 1
    set_privacy:
      argument: 0
      nested:
        argument: '*'
      to: public

  - name: protected
    unless:
      has_argument: 0
    set_default_privacy: protected

  - name: protected
    has_argument: 0
    set_privacy:
      argument: '*'
      to: protected

  - name: protected
    has_argument: 0
    unless:
      has_argument: 1
    set_privacy:
      argument: 0
      nested:
        argument: '*'
      to: protected

  - name: private
    unless:
      has_argument: 0
    set_default_privacy: private

  - name:
      - private
      - private_class_method
      - private_constant
    has_argument: 0
    set_privacy:
      argument: '*'
      to: private

  - name: private
    has_argument: 0
    unless:
      has_argument: 1
    set_privacy:
      argument: 0
      nested:
        argument: '*'
      to: private
