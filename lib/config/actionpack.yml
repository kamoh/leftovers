# THIS IS INCOMPLETE (you can help by expanding it)
# rails is _really complicated_ and has a lot of magic which calls methods for you.
# some is currently impossible to handle (with_options).
# Some is just corners of rails I haven't hit yet.

include_paths: '*.rjs'
precompile:
  - paths: '*.rjs'
    format: erb

gems:
  - activesupport
  - actionview


keep:
  - matches? # called by route constraints

  # https://edgeapi.rubyonrails.org/classes/AbstractController/Rendering.html#method-i-view_assigns
  - view_assigns

  # https://edgeapi.rubyonrails.org/classes/ActionController/RequestForgeryProtection/ClassMethods.html#method-i-protect_from_forgery
  - handle_unverified_request

  - has_suffix: Helper
    path: /app/helpers

dynamic:
  # https://edgeapi.rubyonrails.org/classes/AbstractController/Callbacks.html
  - names:
      - after_action
      - append_after_action
      - append_around_action
      - append_before_action
      - around_action
      - before_action
      - prepend_after_action
      - prepend_around_action
      - prepend_before_action
    calls:
      - arguments: ['*', if, unless]

  - names:
    - skip_after_action
    - skip_around_action
    - skip_before_action
    calls: [if, unless]

  - names: protect_from_forgery
    calls: [if, unless]


  # https://edgeapi.rubyonrails.org/classes/ActionController/Logging/ClassMethods.html#method-i-log_at
  - names: log_at
    calls: [if, unless]


  - name: helper
    calls:
      - arguments: '*'
        camelize: true

  # https://edgeapi.rubyonrails.org/classes/ActionController/TestCase/Behavior.html
  - names: [delete, get, head, patch, put, post]
    unless:
      has_argument: 1
    calls: 0

  - names: process
    calls: 0
    unless:
      has_argument: 1

  # https://edgeapi.rubyonrails.org/classes/AbstractController/Helpers/ClassMethods.html
  - name: scope
    unless:
      has_argument:
        at: 1
        has_value:
          type: Proc
    calls:
      argument: module # routes
      camelize: true
      split: '::'
  - name: namespace
    calls:
      - argument: 0
        camelize: true
        split: '::'
  - name:
      - rescue_from
    calls:
      - argument: [1, with]
  - name:
      - match
      - delete
      - get
      - patch
      - post
      - put
      - root
    calls:
      - arguments: [0, action]
      - argument: '**'
        delete_before: '#'
      - argument: '**'
        delete_after: '#'
        camelize: true
        add_suffix: Controller
        split: '::'
  - name:
      - resource
      - resources
    has_argument: 0
    calls:
      - argument: only
      - argument: only
        nested:
          argument: '*'
      - argument: controller
        camelize: true
        add_suffix: Controller
        split: '::'
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: index
        - at: except
          has_value:
            at: '*'
            has_value: index
    calls:
      - value: index
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: new
        - at: except
          has_value:
            at: '*'
            has_value: new
    calls:
      - value: new
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: create
        - at: except
          has_value:
            at: '*'
            has_value: create
    calls:
      - value: create
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: edit
        - at: except
          has_value:
            at: '*'
            has_value: edit
    calls:
      - value: edit
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: update
        - at: except
          has_value:
            at: '*'
            has_value: update
    calls:
      - value: update
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: destroy
        - at: except
          has_value:
            at: '*'
            has_value: destroy
    calls:
      - value: destroy
  - name:
      - resources
      - resource
      - controller
      - namespace
    calls:
      - argument: 0
        camelize: true
        add_suffix: Controller
        split: '::'
  - name: resource
    calls:
      - argument: 0
        camelize: true
        pluralize: true
        add_suffix: Controller
        split: '::'

  # this is not technically calling these,
  # but it feels useful nonetheless as permit will (generally) be used to process
  # before calling AR or AM #create or #update
  - name: permit
    calls:
      arguments: ['*', '**']
      keywords: '**'
      add_suffix: "="
      recursive: true
